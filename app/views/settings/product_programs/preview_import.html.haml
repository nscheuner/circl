#secondary_navbar.navbar.navbar-default.navbar-static-top

  .container
    #secondary_navigation.collapse.navbar-collapse
      .navbar-brand
        = I18n.t("product.views.import_products")

.container
  .row
    .col-lg-12
      - if @programs.is_a? String
        .alert.alert-danger
          .btn.btn-primary
            .icon.icon-chevron-left
            = I18n.t("common.previous")
          = @products

      - else
        = form_tag(import_settings_product_programs_path, method: :post, id: 'settings_product_programs_import') do
          .panel.panel-default
            .panel-heading
              .panel-title
                = I18n.t('product.views.products_found_in_file')

            .panel-body

              %table.datatable
                %thead
                  %tr
                    %th= I18n.t("common.line")
                    %th= I18n.t("common.key")
                    %th= I18n.t("common.title")
                    %th= I18n.t("common.description")
                    %th= I18n.t("product_programs.views.program_group")
                    %th= I18n.t("common.archive")
                    %th= I18n.t("common.import")

                %tbody
                  - @programs.each_with_index do |p, i|
                    - line = i + 1
                    - error_msg = []
                    - p.errors.messages.each do |k,a|
                      - error_msg << "#{k}: " + a.join(", ")

                    - p.notices.messages.each do |k,a|
                      - error_msg << a.join(", ")

                    - classes = []
                    - if p.errors.empty?
                      - if p.notices.empty?
                        - classes << 'success'
                      - else
                        - classes << 'warning'
                    - else
                      - classes << 'danger'

                    %tr{class: classes.join(" "),
                      'data-trigger' => 'click',
                      'data-title' => (p.errors.size.to_s + " " + I18n.t("common.errors.error") + "(s)"),
                      'data-html' => true,
                      'data-line' => line,
                      'data-placement' => 'auto right',
                      'data-content' => raw(error_msg.join(" | "))}

                      %td= line
                      %td= p.key
                      %td= p.title
                      %td= p.description.try(:exerpt)
                      %td= p.program_group
                      %td
                        = I18n.t("common.#{p.archive}") unless p.archive.nil?
                      %td= check_box_tag "unreal[]", i, p.errors.count == 0

              %h3= I18n.t("product.views.ignore_theses_columns")
              .row
                .col-md-6
                  %h4= I18n.t("product.views.product_attributes")
                  %ol
                    %li
                      = check_box_tag "skip_columns[]", 'key', false, disabled: true
                      key
                    - @columns.each do |c|
                      - next if c == :key # Mandatory
                      - next if c.to_s.match(/\d+$/) # Skip prices
                      %li
                        = check_box_tag "skip_columns[]", c
                        = c

            .panel-footer
              .text-right
                = submit_tag I18n.t('product.views.proceed_with_import'), class: 'btn btn-primary'
